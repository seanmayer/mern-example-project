{"version":3,"file":"static/js/542.5c8f6635.chunk.js","mappings":"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","sources":["shared/components/FormElements/Button.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\n\nconst ModalOverlay = props => {\n    const content = (\n        <div className={`modal ${props.className}`} style={props.style}>\n            <header className={`modal__header ${props.headerClass}`}>\n                <h2>{props.header}</h2>\n            </header>\n            <form onSubmit={props.onSubmit ? props.onSubmit : (event) => event.preventDefault()}>\n                <div className={`modal__content ${props.contentClass}`}>\n                    {props.children}\n                </div>\n                <footer className={`modal__footer ${props.footerClass}`}>\n                    {props.footer}\n                </footer>\n            </form>\n        </div>\n    );\n    return ReactDOM.createPortal(content,document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n    return <React.Fragment>\n        {props.show && <Backdrop onClick={props.onCancel}/>}\n        <CSSTransition \n            in={props.show} \n            mountOnEnter \n            unmountOnExit \n            timeout={200} \n            classNames=\"modal\"    \n        > \n                <ModalOverlay {...props} />\n        </CSSTransition>\n    </React.Fragment>\n\n};\n\nexport default Modal;","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        \n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UserItem.css';\n\nconst UserItem = props => {\n    return (\n        <li className=\"user-item\">\n            <Card className=\"user-item__content\">\n                <Link to={`/${props.id}/places`}>\n                    <div className=\"user-item__image\">\n                        <Avatar image={process.env.REACT_APP_ASSET_URL + `/${props.image}`} alt={props.name}/>\n                    </div>\n                    <div className=\"user-item__info\">\n                        <h2>{props.name}</h2>\n                        <h3>{props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}</h3>\n                    </div>\n                </Link>\n            </Card>\n        </li>\n    );\n};\n\nexport default UserItem;","import React from 'react';\n\nimport UserItem from './UserItem';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UsersList.css';\n\nconst UsersList = props => {\n    if(props.items.length === 0) {\n        return (\n          <div className=\"center\">\n            <Card>\n              <h2>No users found.</h2>\n            </Card>\n          </div>\n        );\n    };\n\n    return (\n        <ul className=\"users-list\">\n          {props.items.map(user => (\n            <UserItem\n              key={user.id}\n              id={user.id}\n              image={user.image}\n              name={user.name}\n              placeCount={user.places.length}\n            />\n          ))}\n        </ul>\n    );\n};\n\nexport default UsersList;","import React, { useEffect, useState } from \"react\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport UsersList from \"../components/UsersList\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst Users = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_APP_URL + \"/users\"\n        );\n\n        setLoadedUsers(responseData.users);\n      } catch (err) {}\n    };\n    fetchUsers();\n  }, [sendRequest]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n    </React.Fragment>\n  );\n};\n\nexport default Users;\n"],"names":["props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","style","onCancel","onClear","header","show","error","footer","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","src","image","alt","width","height","Card","id","process","name","placeCount","items","length","map","user","places","loadedUsers","setLoadedUsers","fetchUsers","users","ErrorModal","LoadingSpinner"],"sourceRoot":""}